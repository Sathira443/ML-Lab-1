# -*- coding: utf-8 -*-
"""Lab1_label1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QKrT9GPyRQF-IrXeon7Bx4Dh-9V6q1D9

Read the data from csv files and import libraries
"""

import pandas as pd
import numpy as np
from sklearn.preprocessing import StandardScaler
from sklearn.ensemble import RandomForestClassifier
from sklearn.decomposition import PCA

df_train = pd.read_csv("/content/drive/MyDrive/Colab Notebooks/train.csv")
df_test = pd.read_csv("/content/drive/MyDrive/Colab Notebooks/valid.csv")

"""Separate features and labels"""

label_columns = ['label_1', 'label_2', 'label_3', 'label_4']
df_train_X = df_train.drop(label_columns, axis=1)
df_train_y = df_train['label_1']
df_test_X = df_test.drop(label_columns, axis=1)
df_test_y = df_test['label_1']

"""Standardize the data"""

scaler = StandardScaler()
df_train_X_scaled = scaler.fit_transform(df_train_X)
df_test_X_scaled = scaler.transform(df_test_X)

"""Train initial model using RandomForestClassifier"""

model = RandomForestClassifier()
model.fit(df_train_X_scaled, df_train_y)
y_pred_before = model.predict(df_test_X_scaled)

"""Apply PCA"""

pca = PCA(0.95)
pca.fit(df_train_X_scaled)
pca_train_X = pca.transform(df_train_X_scaled)
pca_test_X = pca.transform(df_test_X_scaled)

"""Train model after PCA"""

model_after = RandomForestClassifier()
model_after.fit(pca_train_X, df_train_y)
y_pred_after = model_after.predict(pca_test_X)

"""Feature importance and selection"""

importance = model_after.feature_importances_
selected_columns = importance >= 0.01
reduced_pca_train_X = pca_train_X[:, selected_columns]
reduced_pca_test_X = pca_test_X[:, selected_columns]

"""Train final model"""

model_final = RandomForestClassifier()

model_final.fit(reduced_pca_train_X, df_train_y)
y_pred_final = model_final.predict(reduced_pca_test_X)

"""Create a DataFrame for results"""

rows, columns = reduced_pca_train_X.shape

feature_names = ["new_feature_" + str(i) for i in range(1, columns + 1)]

data_frame = pd.DataFrame(reduced_pca_test_X, columns=feature_names)

new_columns = {
    'Predicted labels before feature engineering' : y_pred_before,
    'Predicted labels after feature engineering' : y_pred_final,
    'No of new features': columns
}

"""Concatenate feature data and results"""

results_df = pd.DataFrame(new_columns)

reduced_pca_test_X_df = pd.DataFrame(reduced_pca_test_X, columns=feature_names)
final_df = pd.concat([results_df, reduced_pca_test_X_df], axis=1)

csv_file_path = '../../Downloads/190359P_label_1.csv'
final_df.to_csv(csv_file_path, index=False)