# -*- coding: utf-8 -*-
"""Lab1_label2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DKQc6lAZbbYWzz7WsEoyVzip7SdpLoWT

Read the data and import the libraries
"""

import pandas as pd
import numpy as np
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA
from sklearn.ensemble import HistGradientBoostingRegressor

df_train = pd.read_csv("/content/drive/MyDrive/Colab Notebooks/train.csv")
df_test = pd.read_csv("/content/drive/MyDrive/Colab Notebooks/valid.csv")

"""Drop rows with NaN values in 'label_2'"""

df_train = df_train.dropna(subset=['label_2'])
df_test = df_test.dropna(subset=['label_2'])

"""Separate features and labels"""

features_to_drop = ['label_1', 'label_3', 'label_4', 'label_2']
df_train_X = df_train.drop(features_to_drop, axis=1)
df_train_y = df_train['label_2']
df_test_X = df_test.drop(features_to_drop, axis=1)
df_test_y = df_test['label_2']

"""Standardize the data"""

scaler = StandardScaler()
df_train_X_scaled = scaler.fit_transform(df_train_X)
df_test_X_scaled = scaler.transform(df_test_X)

"""Create a HistGradientBoostingRegressor model and predicts labels before PCA"""

model = HistGradientBoostingRegressor()
model.fit(df_train_X_scaled, df_train_y)

y_pred_before = model.predict(df_test_X_scaled)

"""Perform PCA"""

pca = PCA(n_components=0.95)
pca_df_train_X = pca.fit_transform(df_train_X_scaled)
pca_df_test_X = pca.transform(df_test_X_scaled)

"""Create a new HistGradientBoostingRegressor model after PCA predicts the labels after PCA"""

model_after = HistGradientBoostingRegressor()
model_after.fit(pca_df_train_X, df_train_y)

y_pred_after = model_after.predict(pca_df_test_X)

"""Prepare the DataFrame for export and save dataframe to cvs file"""

columns = pca_df_test_X.shape[1]
feature_names = [f"feature_{i}" for i in range(1, columns + 1)]

data_frame = pd.DataFrame(pca_df_test_X, columns=feature_names)
data_frame.insert(0, 'Predicted labels before', y_pred_before)
data_frame.insert(1, 'Predicted labels after', y_pred_after)
data_frame.insert(2, 'No. of features', columns)

csv_file_path = '190359P_label_2.csv'
data_frame.to_csv(csv_file_path, index=False)